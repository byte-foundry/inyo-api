scalar DateTime
scalar Json

type Query {
  me: User
  customer(id: ID!): Customer
  quote(id: ID!, token: String): Quote
}

type Mutation {
  signup(email: String!, password: String!, firstName: String, lastName: String, company: CompanyInput): AuthPayload!
  login(email: String!, password: String!): AuthPayload!

  # Create a new customer inside the user's company
  createCustomer(email: String!): Customer!

  # Create a new quote for a customer of the user's company
  createQuote(customerId: ID, customer: CustomerInput, template: QuoteTemplate, option: OptionInput): Quote!
  # Update quote
  updateQuote(id: ID!, name: String!, option: OptionInput): Quote
  # Remove quote
  removeQuote(id: ID!): Quote

  # Add an option to the quote
  # addOption(quoteId: ID!, name: String!, sections: [SectionInput!]): Option!
  updateOption(id: ID!, proposal: Json!): Option
  # Remove an option
  # removeOption(id: ID!): Option

  # Add section to one of the quote's option
  addSection(optionId: ID!, name: String!, items: [ItemInput!]): Section!
  # Update 
  updateSection(id: ID!, name: String!): Section
  # Remove section
  removeSection(id: ID!): Section

  # Add an item to a section
  addItem(sectionId: ID!, name: String!): Item!
  # Update item properties
  updateItem(id: ID!, name: String, description: String, unitPrice: Int, unit: Int, vatRate: Int): Item
  # Remove an item
  removeItem(id: ID!): Item

  # Send quote to validation, DRAFT -> SENT
  sendQuote(id: ID!): Quote!
  # Customer can accept quote, SENT -> ACCEPTED
  acceptQuote(id: ID!, token: String!): Quote!
  # Customer can reject invoice, SENT -> REJECTED
  rejectQuote(id: ID!, token: String!): Quote!
  sendEmail(id: ID!, email: String!, user: String!, customerName: String!, projectName: String!, quoteUrl: String!): Boolean
}

input AddressInput {
  street: String
  city: String
  postalCode: String
  country: String
}

input CompanyInput {
  name: String
  email: String
  phone: String
  siret: String
  rcs: String
  rm: String
  vat: String
}

input CustomerInput {
  name: String!
  firstName: String!
  lastName: String!
  email: String!
  address: AddressInput
  phone: String
  siret: String
  rcs: String
  rm: String
}

input ItemInput {
  name: String!
  description: String
  unitPrice: Int
  unit: Int
  vatRate: Int
}

input SectionInput {
  name: String!
  items: [ItemInput!]!
}

input OptionInput {
  proposal: Json
  sections: [SectionInput!]!
}

type AuthPayload {
  token: String!
  user: User!
}

type Address {
  number: String # tmp
  street: String
  city: String
  postalCode: String
  country: String
}

# Represents a company or an individual that is going to receive an invoice
type Customer {
  id: ID!
  name: String
  email: String!
  address: Address
  phone: String
  siret: String
  rcs: String
  rm: String
  vat: String
}

enum QuoteStatus {
  DRAFT
  SENT
  ACCEPTED
  REJECTED
  INVOICED
  INVOICED_ACCEPTED
}

enum QuoteTemplate {
  WEBSITE
  IDENTITY
}

enum ItemStatus {
  PENDING
  FINISHED
  UPDATED
  UPDATED_SENT
}

# Until unions are supported
# type Author {
#   user: User
#   customer: Customer
# }

# type Comment {
#   id: ID!
#   value: String!
#   author: Author!
# }

type Item {
  id: ID!
  name: String!
  description: String
  unitPrice: Int!
  # when unit has been changed but not yet validated
  pendingUnit: Int
  unit: Int
  # comments: [Comment!]!
  vatRate: Int!
  status: ItemStatus!
}

type Section {
  id: ID!
  name: String!
  items: [Item!]!
}

type Option {
  id: ID!
  name: String!
  proposal: Json
  sections: [Section!]!
}

type Quote {
  id: ID!
  name: String!
  template: QuoteTemplate
  issuer: Company!
  customer: Customer!
  status: QuoteStatus!
  options: [Option!]!
  viewedByCustomer: Boolean!
  issuedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Company {
  id: ID!
  name: String
  owner: User!
  email: String
  address: Address
  phone: String
  siret: String
  rcs: String
  rm: String
  vat: String
  customers: [Customer!]!
  quotes: [Quote!]!
}

type User {
  id: ID!
  email: String!
  firstName: String
  lastName: String
  company: Company!
}
